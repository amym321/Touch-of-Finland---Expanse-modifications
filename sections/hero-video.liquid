{%- unless section.settings.full_width -%}
  <div class="page-width hero--padded">
{%- endunless -%}

  {%- style -%}
    .hero--{{ section.id }} {
      height: {{ section.settings.height_mobile }}px;
    }
    .hero--{{ section.id }} .hero__title {
      font-size: {{ section.settings.title_size | times: 0.5 }}px;
    }
    @media only screen and (min-width: 769px) {
      .hero--{{ section.id }} {
        height: {{ section.settings.height }}px;
      }
      .hero--{{ section.id }} .hero__title {
        font-size: {{ section.settings.title_size }}px;
      }
    }

    {%- assign button_alpha = section.settings.color_accent | color_extract: 'alpha' -%}
    {% unless button_alpha == 0.0 %}
      .hero--{{ section.id }} .btn {
        background: {{ section.settings.color_accent }} !important;
        border-color: {{ section.settings.color_accent }} !important;

        {%- assign accent_brightness = section.settings.color_accent | color_extract: 'lightness' -%}

        {% if accent_brightness > 40 %}
          color: #000 !important;
        {% endif %}
      }
    {% endunless %}

    {% if section.settings.overlay_opacity > 0 %}
      .hero--{{ section.id }} .hero__text-wrap:after {
        content: '';
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        z-index: 3;
        background-color: #000;
        opacity: {{ section.settings.overlay_opacity | divided_by: 100.0 }};
      }
    {% endif %}
  {%- endstyle -%}

  <div
    data-section-id="{{ section.id }}"
    data-section-type="video-section"
    class="video-parent-section hero hero--{{ section.id }}">

    <div class="hero__media hero__media--{{ section.id }}">
      <div class="hero__media-container">

        {%- if section.settings.video_url contains 'youtube.com/watch' -%}
          {%- assign video_id = section.settings.video_url | split: 'v=' -%}
          {%- assign video_id = video_id[1] | split: '&' | first -%}
          <div
            id="YouTubeVideo-{{ section.id }}"
            class="video-div"
            data-type="youtube"
            data-video-id="{{ video_id }}"></div>
        {%- endif -%}

        {%- if section.settings.video_url contains 'youtu.be/' -%}
          {%- assign video_id = section.settings.video_url | split: '.be/' -%}
          {%- assign video_id = video_id[1] | split: '&' | first -%}
          <div
            id="YouTubeVideo-{{ section.id }}"
            class="video-div"
            data-type="youtube"
            data-video-id="{{ video_id }}"></div>
        {%- endif -%}

        {%- if section.settings.video_url contains 'vimeo.com' -%}
          {%- assign video_id = section.settings.video_url | split: '.com/' -%}
          {%- assign video_id = video_id[1] | split: '/' | first -%}
          <div
            id="Vimeo-{{ section.id }}"
            class="video-div"
            data-type="vimeo"
            data-video-id="{{ video_id }}"></div>
        {%- endif -%}

        {%- if section.settings.video_url contains '.mp4' or section.settings.video_url contains '.MP4' -%}
          <video
            id="Mp4Video-{{ section.id }}"
            class="video-div"
            data-type="mp4"
            src="{{ section.settings.video_url }}"
            loop muted playsinline autoplay></video>
        {%- endif -%}

      </div>
    </div>

    <div class="hero__text-wrap">
      <div class="page-width">
        <div class="hero__text-content {{ section.settings.text_align }}">
          <div class="hero__text-shadow">
            {%- if section.settings.video_url contains 'vimeo.com' -%}
              <button type="button" id="VimeoTrigger-{{ section.id }}" class="vimeo-mobile-trigger medium-up--hide">
                <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-play" viewBox="18.24 17.35 24.52 28.3"><path fill="#323232" d="M22.1 19.151v25.5l20.4-13.489-20.4-12.011z"/></svg>
              </button>
            {%- endif -%}

            {%- unless section.settings.title == blank -%}
              <h2 class="h1 hero__title">
                <div class="animation-contents">
                {{ section.settings.title | newline_to_br }}
                </div>
              </h2>
            {%- endunless -%}
            {%- if section.settings.subheading or section.settings.link -%}
              {%- unless section.settings.subheading == blank -%}
                <div class="hero__subtitle">
                  <div class="animation-contents">
                    {{ section.settings.subheading | escape }}
                  </div>
                </div>
              {%- endunless -%}
              {%- if section.settings.link_text != blank -%}
                {%- assign link_href = section.settings.link -%}
                {%- if section.settings.link == blank -%}
                  {%- assign link_href = section.settings.video_url -%}
                {%- endif -%}
                <div class="hero__link">
                  <a href="{{ link_href }}" class="btn{% if section.settings.color_accent and section.settings.color_accent == 'rgba(0,0,0,0)' %} btn--inverse{% endif %}">
                    {%- if link_href contains 'youtube.com/watch' or link_href contains 'youtu.be/' -%}
                      <svg aria-hidden="true" focusable="false" role="presentation" class="icon icon-play" viewBox="18.24 17.35 24.52 28.3"><path fill="#323232" d="M22.1 19.151v25.5l20.4-13.489-20.4-12.011z"/></svg>
                    {%- endif -%}
                    {{ section.settings.link_text }}
                  </a>
                </div>
              {%- endif -%}
            {%- endif -%}
          </div>
        </div>
      </div>
    </div>

  </div>

{%- unless section.settings.full_width -%}
  </div>
{%- endunless -%}

{% schema %}
  {
    "name": "Video hero",
    "class": "index-section--hero",
    "settings": [
      {
        "type": "checkbox",
        "id": "full_width",
        "label": "Full page width",
        "default": true
      },
      {
        "type": "textarea",
        "id": "title",
        "label": "Heading",
        "default": "Bring your\nbrand to life."
      },
      {
        "type": "range",
        "id": "title_size",
        "label": "Heading text size",
        "default": 70,
        "min": 40,
        "max": 100,
        "unit": "px"
      },
      {
        "type": "text",
        "id": "subheading",
        "label": "Subheading",
        "default": "Seamless hero videos"
      },
      {
        "type": "text",
        "id": "link_text",
        "label": "Button text",
        "default": "Optional button"
      },
      {
        "type": "url",
        "id": "link",
        "label": "Button link",
        "info": "Links to YouTube videos will be opened in a video player"
      },
      {
        "type": "color",
        "id": "color_accent",
        "label": "Buttons",
        "default": "#fff"
      },
      {
        "type": "select",
        "id": "text_align",
        "label": "Text alignment",
        "default": "vertical-center horizontal-center",
        "options": [
          {
            "value": "vertical-center horizontal-left",
            "label": "Center left"
          },
          {
            "value": "vertical-center horizontal-center",
            "label": "Center"
          },
          {
            "value": "vertical-center horizontal-right",
            "label": "Center right"
          },
          {
            "value": "vertical-bottom horizontal-left",
            "label": "Bottom left"
          },
          {
            "value": "vertical-bottom horizontal-center",
            "label": "Bottom center"
          },
          {
            "value": "vertical-bottom horizontal-right",
            "label": "Bottom right"
          }
        ]
      },
      {
        "type": "text",
        "id": "video_url",
        "label": "Background video link",
        "default": "https://www.youtube.com/watch?v=_9VUPq3SxOc",
        "info": "Supports YouTube, .MP4 and Vimeo. Not all features supported by Vimeo. [Learn more](https://archetypethemes.co/blogs/expanse/how-do-i-add-background-videos)"
      },
      {
        "type": "range",
        "id": "overlay_opacity",
        "label": "Text protection",
        "info": "Darkens your video to ensure your text is readable",
        "default": 0,
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "%"
      },
      {
        "type": "range",
        "id": "height",
        "label": "Height",
        "default": 650,
        "min": 450,
        "max": 750,
        "step": 10,
        "unit": "px"
      },
      {
        "type": "range",
        "id": "height_mobile",
        "label": "Mobile height",
        "default": 300,
        "min": 250,
        "max": 500,
        "step": 10,
        "unit": "px"
      }
    ],
    "presets": [{
      "name": "Video hero"
    }]
  }
{% endschema %}
